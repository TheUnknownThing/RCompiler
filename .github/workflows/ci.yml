name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test Stable (${{ matrix.os }} / ${{ matrix.compiler }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc, clang]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build clang-tidy ${{ matrix.compiler }}

      - name: Configure
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release \
                -DBUILD_TESTING=ON \
                -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
                ${{ matrix.compiler == 'clang' && '-DCMAKE_CXX_COMPILER=clang++' || '-DCMAKE_CXX_COMPILER=g++' }}

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Run clang-tidy
        if: matrix.compiler == 'clang'
        run: |
          find src include tests -name "*.cpp" -o -name "*.hpp" | \
          grep -v "\.dir/" | \
          xargs clang-tidy -p build/ --config-file=.clang-tidy

      - name: Run unit tests (stable)
        run: |
          ctest --test-dir build --output-on-failure -C Release -L stable
      - name: Run parser basic tests
        run: |
          ctest --test-dir build --output-on-failure -C Release -R "parser_basic"
      - name: Run parser comprehensive tests (allowed failure subset)
        run: |
          # Comprehensive labeled unstable; do not fail build if it fails
          ctest --test-dir build --output-on-failure -C Release -R "parser_comprehensive" || true

      - name: Upload build artifacts (binary)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rcompiler-${{ matrix.os }}-${{ matrix.compiler }}
          path: |
            build/rcompiler
            build/**/*.log

  build-and-test-unstable:
    name: Build and Test Unstable (Allowed Failure)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build g++

      - name: Configure
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++ -DBUILD_TESTING=ON

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Run tests (unstable label)
        run: ctest --test-dir build --output-on-failure -C Release -L unstable || true
